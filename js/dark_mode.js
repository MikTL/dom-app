const d = document
const ls = localStorage
export default function darkMode(btn, dark) {
  const $btnDark = d.querySelector(btn),
    $selectores = d.querySelectorAll("[data-dark]") // el atributo data-dark sera a√±adido a todo elemento en htlm que necesite el dark mode
  //console.log($selectores)
  let darK = function () {
    $selectores.forEach((el) => {
      //a√±adimos la clase se invierte los colores en cada elemento que tiene data-dark como atributo
      el.classList.add("theme")
      $btnDark.textContent = "‚òÄÔ∏è"
    })
    ls.setItem("theme", "dark") // a√±adimos la configuracion dark al storage
  }
  let light = function () {
    $selectores.forEach((el) => {
      el.classList.remove("theme")
      $btnDark.textContent = "üåô"
    })
    ls.setItem("theme", "light") //a√±adimos la configuracion light al storage
  }
  d.addEventListener("click", (e) => {
    if (e.target.matches(btn)) {
      if ($btnDark.textContent === "üåô") {
        darK()
      } else {
        light()
      }
    }
  })
  d.addEventListener("DOMContentLoaded", () => {
    //console.log(ls.getItem("theme"))
    //al cargar la pagina, este evento preguntar√° si existe el elemento theme con cierto valor en el storage, si existe, carga dicha configuraci√≥n, es por eso que aplica el modo oscuro aun despues de recargar la p√°gina
    if (ls.getItem("theme") === null) ls.setItem("theme", "light")
    if (ls.getItem("theme") === "light") light()
    if (ls.getItem("theme") === "dark") darK()
  })
}
